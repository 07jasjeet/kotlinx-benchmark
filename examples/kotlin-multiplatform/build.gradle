import org.jetbrains.kotlin.konan.target.HostManager

buildscript {
    repositories {
//        maven { url "$rootProject.projectDir/../kotlin-libraries-infra/build/maven" }
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' 
    id 'org.jetbrains.kotlin.plugin.allopen' version "1.3.20"
    id 'org.jetbrains.gradle.benchmarks.plugin' version "0.1.7"
    id 'kotlinx.team.node' 
}

project.ext.hostManager = new HostManager()
apply from: rootProject.file("gradle/utility.gradle")

node {
    version = '10.15.1'
}

// how to apply plugin to a specific source set?
allOpen {
    annotation("org.openjdk.jmh.annotations.State")
}

kotlin {
    jvm {
        compilations.all {
            kotlinOptions {
                jvmTarget = '1.8'
            }
        }
    }

    js {
        compilations.all {
            kotlinOptions {
                sourceMap = true
                moduleKind = "umd"
            }
        }
    }

    if (project.ext.ideaActive) {
        targets {
            project.ext.nativeTarget = fromPreset(project.ext.ideaPreset, 'native')
        }
    } else {
        macosX64('macosX64')
        linuxX64('linuxX64')
        mingwX64('windowsX64')
    }

    sourceSets.all {
        languageSettings {
            progressiveMode = true
            useExperimentalAnnotation("kotlin.Experimental")
            useExperimentalAnnotation('kotlin.ExperimentalUnsignedTypes')
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation project(":runtime")
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
        
        if (ideaActive) {
            nativeMain {
                kotlin.srcDir("src/${project.ext.nativeTarget.preset.name}Main")
            }
        } else {
            nativeMain {}
            nativeTest {}

            configure([linuxX64Main, macosX64Main, windowsX64Main]) {
                dependsOn nativeMain
            }

            configure([linuxX64Test, macosX64Test, windowsX64Test]) {
                dependsOn nativeTest
            }
        }

        nativeMain.dependencies {
            
        }    
    }
}

// Configure benchmark
benchmark {
    defaults {
        iterations = 5 // number of iterations
        iterationTime = 300 // time in ms per iteration
    }
    
    // Setup configurations
    configurations {
        // This one matches compilation base name, e.g. 'jvm', 'jvmTest', etc
        register("jvm") {
            jmhVersion = "1.21"
        }
        register("js") {}
        register("native") {}
    }
}

