plugins {
    id 'org.jetbrains.kotlin.multiplatform' 
    id 'org.jetbrains.kotlin.plugin.allopen' version "1.3.20"
    id 'com.moowork.node' version '1.2.0'
    id 'org.jetbrains.gradle.benchmarks.plugin' version "0.1.7"
}

node {
    version = "$node_version"
    npmVersion = "$npm_version"
    download = true

    workDir = new File(rootProject.projectDir, ".gradle/nodejs")
    npmWorkDir = new File(rootProject.projectDir, ".gradle/npm")
    nodeModulesDir = file(buildDir)
}

// Workaround the problem with Node downloading
repositories.all {
    if (it instanceof IvyArtifactRepository) {
        metadataSources {
            artifact()
        }
    }
}

// how to apply plugin to a specific source set?
allOpen {
    annotation("org.openjdk.jmh.annotations.State")
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
}

kotlin {
    jvm {
        compilations.all {
            kotlinOptions {
                jvmTarget = '1.8'
            }
        }
    }

    js {
        compilations.all {
            kotlinOptions {
                sourceMap = true
                moduleKind = "umd"
            }
        }
    }
    
    // For ARM, preset should be changed to presets.iosArm32 or presets.iosArm64
    // For Linux, preset should be changed to e.g. presets.linuxX64
    // For MacOS, preset should be changed to e.g. presets.macosX64
    macosX64('native')

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
                implementation project(":runtime")
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
        nativeMain {
        }
        nativeTest {
        }
    }

    sourceSets.all {
        languageSettings.progressiveMode = true
    }
}

// Configure benchmark
benchmark {
    defaults {
        iterations = 5 // number of iterations
        iterationTime = 300 // time in ms per iteration
    }
    
    // Setup configurations
    configurations {
        // This one matches compilation base name, e.g. 'jvm', 'jvmTest', etc
        register("jvm") {
            jmhVersion = "1.21"
        }
        register("js") {}
        register("native") {}
    }
}

