import org.jetbrains.kotlin.konan.target.HostManager

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'maven-publish'
    id 'org.jetbrains.kotlin.multiplatform' 
}

project.ext.hostManager = new HostManager()
apply from: rootProject.file("gradle/utility.gradle")

repositories {
    mavenCentral()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
}

kotlin {
    jvm {
        compilations.all {
            kotlinOptions {
                jvmTarget = '1.8'
            }
        }
    }

    js {
        compilations.all {
            kotlinOptions {
                sourceMap = true
                moduleKind = "umd"
            }
        }
    }

    if (project.ext.ideaActive) {
        targets {
            project.ext.nativeTarget = fromPreset(project.ext.ideaPreset, 'native')
        }
    } else {
        macosX64('macosX64')
        linuxX64('linuxX64')
        mingwX64('windowsX64')
    }

    sourceSets.all {
        kotlin.srcDirs = ["$it.name/src"]
        resources.srcDirs = ["$it.name/resources"]
        languageSettings {
            progressiveMode = true
            useExperimentalAnnotation("kotlin.Experimental")
            useExperimentalAnnotation('kotlin.ExperimentalUnsignedTypes')
        }
    }

    sourceSets {
        commonMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-common'
            }
        }
        commonTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-common'
                implementation 'org.jetbrains.kotlin:kotlin-test-annotations-common'
            }
        }
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
                compileOnly "org.openjdk.jmh:jmh-core:$jmhVersion"
            }
        }
        jvmTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test'
                implementation 'org.jetbrains.kotlin:kotlin-test-junit'
            }
        }
        jsMain {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'
            }
        }
        jsTest {
            dependencies {
                implementation 'org.jetbrains.kotlin:kotlin-test-js'
            }
        }
        
        
        if (ideaActive) {
            nativeMain {
                kotlin.srcDir("${project.ext.nativeTarget.preset.name}Main/src")
            }
        } else {
            nativeMain {}
            nativeTest {}

            configure([linuxX64Main, macosX64Main, windowsX64Main]) {
                dependsOn nativeMain
            }

            configure([linuxX64Test, macosX64Test, windowsX64Test]) {
                dependsOn nativeTest
            }
        }

        nativeMain.dependencies {
        }
    }
}

